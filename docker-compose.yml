# file: docker-compose.yml
# DO NOT USE IN PRODUCTION
#
# Development docker-compose for testing locally:
# - All users are 'admin'
# - All passwords are 'password'
# 
# With the exception of the database where the user is 
# 'root' rather than admin. And the database users for 
# each service are named after their respective service 
# to avoid conflict.
#
# The Traefik image acts as Reverse Proxy to the services,
# assuming you can map to port 80 on your machine. The 
# loop back for localhost should make the following urls 
# accessible in your browser:
#
# - activemq.localhost/admin
# - blazegraph.localhost/bigdata
# - drupal.localhost
# - fcrepo.localhost/fcrepo/reset
# - matomo.localhost
#
# For other images you can use the command:
#
# ./commands/open-in-browser SERVICE
version: "3.7"
networks:
  external:
    internal: false
  default:
    internal: true
volumes:
  activemq-data:
  blazegraph-data:
  drupal-config-data:
  drupal-sites-data:
  cantaloupe-data:
  etcd-data:
  fcrepo-data:
  jwt-data:
  jwt-public-data:
  karaf-data:
  matomo-config-data:
  mysql-data:
  mysql-files:
  solr-data:
services:
  # Single node cluster.
  # 
  #  If disabled the system will fall back on Environment Variables.
  #  To set key/value pairs use the following:
  #
  #  ./commands/etcdctl.sh put /drupal/site/default/name "default"
  #
  etcd:
    image: gcr.io/etcd-development/etcd:v3.4.7
    environment:
      ETCD_ADVERTISE_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    volumes:
      - etcd-data:/data
    ports:
      - 2379
      - 2380
      - 4001
    command: >
      etcd
      --data-dir=/data
  watchtower:
    image: v2tec/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 1 --no-pull
  activemq:
    image:  ${REPOSITORY:-local}/activemq:latest
    volumes:
      - activemq-data:/opt/activemq/data
    labels:
      # Do not expose in production.
      - traefik.http.services.activemq.loadbalancer.server.port=8161
      - traefik.http.routers.activemq_http.service=activemq
      - traefik.http.routers.activemq_http.entrypoints=http
  alpaca:
    image:  ${REPOSITORY:-local}/alpaca:latest
    volumes:
      - karaf-data:/opt/karaf/data
    depends_on:
      - activemq
  blazegraph:
    image:  ${REPOSITORY:-local}/blazegraph:latest
    volumes:
      - blazegraph-data:/data
    networks:
      default:
        aliases:
          - blazegraph.localhost
    labels:
      - traefik.http.services.blazegraph.loadbalancer.server.port=80
      - traefik.http.routers.blazegraph_http.service=blazegraph
      - traefik.http.routers.blazegraph_http.entrypoints=http
  cantaloupe:
    image:  ${REPOSITORY:-local}/cantaloupe:latest
    volumes:
      - cantaloupe-data:/data
    networks:
      default:
        aliases:
          - cantaloupe.localhost
    labels:
      - traefik.http.services.cantaloupe.loadbalancer.server.port=80
      - traefik.http.routers.cantaloupe_http.service=cantaloupe
      - traefik.http.routers.cantaloupe_http.entrypoints=http
  crayfits:
    image:  ${REPOSITORY:-local}/crayfits:latest
    depends_on:
      - fits
  # Database is chosen as the service name rather than mariadb,
  # as institutions may want to swap out back-ends later and
  # database is a more sensible default.
  database:
    image:  ${REPOSITORY:-local}/mariadb:latest
    volumes:
      - mysql-data:/var/lib/mysql
      - mysql-files:/var/lib/mysql-files
  drupal:
    image:  ${REPOSITORY:-local}/sandbox:latest
    restart: unless-stopped
    volumes:
      - drupal-config-data:/var/www/drupal/config
      - drupal-sites-data:/var/www/drupal/web/sites
      - solr-data:/opt/solr/server/solr
      - jwt-data:/opt/keys/claw/
    depends_on:
      - solr
      - fcrepo
      - database
      - activemq
    networks:
      default:
        aliases:
          - drupal.localhost
    labels:
      - traefik.http.services.drupal.loadbalancer.server.port=80
      - traefik.http.routers.drupal_http.service=drupal
      - traefik.http.routers.drupal_http.entrypoints=http
  fcrepo:
    image:  ${REPOSITORY:-local}/fcrepo:latest
    volumes:
      - fcrepo-data:/data
      - jwt-data:/opt/keys/claw/
    depends_on: 
      - activemq
      - database
    networks:
      default:
        aliases:
          - fcrepo.localhost
    labels:
      # Do not expose in production.
      - traefik.http.services.fcrepo.loadbalancer.server.port=80
      - traefik.http.routers.fcrepo_http.service=fcrepo
      - traefik.http.routers.fcrepo_http.entrypoints=http
  fits:
    image:  ${REPOSITORY:-local}/fits
  gemini:
    image:  ${REPOSITORY:-local}/gemini:latest
    volumes:
      - jwt-data:/opt/keys/claw/
    depends_on: 
      - database
  homarus:
    image:  ${REPOSITORY:-local}/homarus:latest
    volumes:
      - jwt-data:/opt/keys/claw/
  houdini:
    image:  ${REPOSITORY:-local}/houdini:latest
    volumes:
      - jwt-data:/opt/keys/claw/
  hypercube:
    image:  ${REPOSITORY:-local}/hypercube:latest
    volumes:
      - jwt-data:/opt/keys/claw/
  matomo:
    image:  ${REPOSITORY:-local}/matomo
    volumes:
      - matomo-config-data:/opt/matomo/config
    depends_on: 
      - database
    networks:
      default:
      external: # Needs external access to request plugins, etc.
    labels:
      # Do not expose in production over http, setup https.
      - traefik.http.services.matomo.loadbalancer.server.port=80
      - traefik.http.routers.matomo_http.service=matomo
      - traefik.http.routers.matomo_http.entrypoints=http
  milliner:
    image:  ${REPOSITORY:-local}/milliner:latest
    volumes:
      - jwt-data:/opt/keys/claw/
  recast:
    image:  ${REPOSITORY:-local}/recast:latest
    volumes:
      - jwt-data:/opt/keys/claw/
  solr:
    image:  ${REPOSITORY:-local}/solr:latest
    volumes:
      - solr-data:/opt/solr/server/solr
    labels:
      # Do not expose in production.
      - traefik.http.services.solr.loadbalancer.server.port=8983
      - traefik.http.routers.solr_http.service=solr
      - traefik.http.routers.solr_http.entrypoints=http
  traefik:
    image: traefik:2.2.1
    command: >
      --api.insecure=true 
      --entryPoints.http.address=:80
      --entryPoints.https.address=:443
      --providers.docker 
      --providers.docker.network=external
      '--providers.docker.defaultRule=Host(`{{ index .Labels "com.docker.compose.service" }}.localhost`)'
    ports:
      - 80:80
      - 443:443
      - 8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - external
      - default
